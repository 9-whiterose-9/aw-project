openapi: "3.0.0"
info:
  title: QRMeat API
  description: API for QRMeat application managing user data, products, and feedback.
  version: "1.0.0"
servers:
  - url: 'https://api.qrmeat.com/'
paths:
  /users/{user_id}:
    get:
      tags:
        - User Management
      summary: Retrieve user details
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      tags:
        - User Management
      summary: Update user details
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: User object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found
    delete:
      tags:
        - User Management
      summary: Delete a user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
  /products:
    get:
      tags:
        - Product Management
      summary: Retrieve all products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
    post:
      tags:
        - Product Management
      summary: Add a new product
      requestBody:
        description: Product to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product added successfully
  /products/{product_id}:
    get:
      tags:
        - Product Management
      summary: Retrieve a specific product by ID
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detailed product info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      tags:
        - Product Management
      summary: Update an existing product
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Product data that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated successfully
        '404':
          description: Product not found
    delete:
      tags:
        - Product Management
      summary: Delete a product
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
  /users/{user_id}/favorites:
    get:
      tags:
        - Favorite Products Management
      summary: List all favorite products for a user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of favorite products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavoritesList'
    post:
      tags:
        - Favorite Products Management
      summary: Add a product to user favorites
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: Product ID to add to favorites
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product added to favorites
  /users/{user_id}/favorites/{product_id}:
    delete:
      tags:
        - Favorite Products Management
      summary: Remove a product from user favorites
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product removed from favorites
  /feedback:
    get:
      tags:
        - Feedback Management
      summary: Retrieve all feedback
      responses:
        '200':
          description: List of all feedback entries
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackList'
    post:
      tags:
        - Feedback Management
      summary: Submit new feedback
      requestBody:
        description: Feedback data to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          description: Feedback submitted successfully
  /feedback/{feedback_id}:
    delete:
      tags:
        - Feedback Management
      summary: Delete feedback
      parameters:
        - name: feedback_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Feedback deleted successfully
  /news:
    get:
      tags:
        - News Management
      summary: Retrieve all news
      responses:
        '200':
          description: List of all news articles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsList'
    post:
      tags:
        - News Management
      summary: Submit a new news article
      requestBody:
        description: News data to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/News'
      responses:
        '201':
          description: News article submitted successfully
  /highlights:
    get:
      tags:
        - Highlights/Produtos nos Destaques Management
      summary: Retrieve all highlighted products
      responses:
        '200':
          description: List of all highlighted products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HighlightsList'
    post:
      tags:
        - Highlights/Produtos nos Destaques Management
      summary: Add a product to highlights
      requestBody:
        description: Product data to be highlighted
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product added to highlights
  /highlights/{product_id}:
    delete:
      tags:
        - Highlights/Produtos nos Destaques Management
      summary: Remove a product from highlights
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Product removed from highlights

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        fullName:
          type: string
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
        description:
          type: string
    ProductList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    FavoritesList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
    Feedback:
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        content:
          type: string
    FeedbackList:
      type: array
      items:
        $ref: '#/components/schemas/Feedback'
    News:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
    NewsList:
      type: array
      items:
        $ref: '#/components/schemas/News'
    HighlightsList:
      type: array
      items:
        $ref: '#/components/schemas/Product'
